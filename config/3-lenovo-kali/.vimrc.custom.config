
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置，若要增加、卸载插件，请放入~/.vimrc.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 开启相对行号
" set relativenumber  

" 开启鼠标
" set mouse=a

" 设置光标所在列高亮
" set cursorcolumn

" indentLine 开启代码对齐线
" let g:indentLine_enabled = 1

" markdown
" let system = system('uname -s')
" if system == "Darwin\n"
"     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
" else
"     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
" endif
" nmap <silent> <F7> <Plug>MarkdownPreview
" imap <silent> <F7> <Plug>MarkdownPreview
" nmap <silent> <F8> <Plug>StopMarkdownPreview
" imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"

" 插件配置参数
  " vim-autoformat
  " let g:formatdef_my_custom_c = '"astyle --mode=c --style=allman"'
  " let g:formatters_c = ['my_custom_c']
 
  "au BufWrite * :Autoformat
  
  "let g:autoformat_autoindent = 0

  " let g:autoformat_retab = 0
  " let g:autoformat_remove_trailing_spaces = 0
  noremap <F3> :Autoformat<CR>
" vue插件
"VUE 相关配置
"采用两个空格的缩进
 au BufNewFile,BufRead *.html,*.js,*.vue set tabstop=4
 au BufNewFile,BufRead *.html,*.js,*.vue set softtabstop=4
 au BufNewFile,BufRead *.html,*.js,*.vue set shiftwidth=4
 au BufNewFile,BufRead *.html,*.js,*.vue set expandtab
" au BufNewFile,BufRead *.html,*.js,*.vue set autoindent
 au BufNewFile,BufRead *.html,*.js,*.vue set fileformat=unix
"这个是解决偶尔高亮失效的，貌似没什么鸟用 
 autocmd FileType vue syntax sync fromstart
"代码格式化的快捷键，设置为F9
 autocmd FileType vue noremap <buffer> <F9> :%!vue-formatter<CR>
"启用eslint代码检查，如果不想受限制，可以注释掉
 let g:syntastic_javascript_checkers = ['eslint']




"键位映射
map tabe :tabe<cr> "cr就不用回车

map gh :set nosplitright<CR>:vsplit<CR> " 垂直分屏并将光标放在左边
map gl :set splitright<CR>:vsplit<CR> " 垂直分屏并将光标放在右边
map gk :set nosplitbelow<CR>:split<CR> " 水平分屏并将光标放在上边
map gj :set splitbelow<CR>:split<CR> " 水平分屏并将光标放在下边

map <leader>h <C-w>h " 按空格加h将光标移到左边的分屏
map <leader>l <C-w>l " 移到右边的分屏
map <leader>j <C-w>j " 移到下面的分屏
map <leader>k <C-w>k " 移到上面的分屏

map <leader>fff :Files<cr>

map W :wq!<CR> " 普通模式下按大写W将保存文件退出
map Q :q!<CR> " 普通模式下按大写Q将退出不保存
map <leader>hhh :view +let\ &l:modifiable=0 ~/.vimplus/help.md

noremap J 5j
noremap K 5k
noremap H 5h
noremap L 5l

imap jj <Esc>  "回到命令模式
imap <C-h> <Left>
imap <C-k> <Up>
imap <C-j> <Down>
imap <C-l> <Right>
